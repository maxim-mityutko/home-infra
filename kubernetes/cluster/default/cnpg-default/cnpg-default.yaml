apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-default
  # Ref: https://cloudnative-pg.io/documentation/current/labels_annotations/
  annotations:
    cnpg.io/skipWalArchiving: enabled
# Ref: https://cloudnative-pg.io/documentation/current/cloudnative-pg.v1/#postgresql-cnpg-io-v1-ClusterSpec
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:17.4
  imagePullPolicy: IfNotPresent
  instances: 1
  enablePDB: false
  primaryUpdateStrategy: unsupervised
  logLevel: info

  postgresql:
    parameters:
      timezone: "Etc/UTC"
      max_slot_wal_keep_size: 200MB
      archive_timeout: 10min   # Ref: https://postgresqlco.nf/doc/en/param/archive_timeout/
      log_min_messages: WARNING
      wal_level: logical      # Ref: https://postgresqlco.nf/doc/en/param/wal_level/
      # wal_level: minimal    # Ref: https://postgresqlco.nf/doc/en/param/wal_level/
      # max_wal_senders: '0'  # Ref: https://postgresqlco.nf/doc/en/param/max_wal_senders/

  managed:
    # Ref: https://cloudnative-pg.io/documentation/current/service_management/
    services:
      disabledDefaultServices: ["r","ro"]

  enableSuperuserAccess: true
  superuserSecret:
    name: cnpg-default-secret
  
  resources:
    requests:
      memory: 400Mi
      cpu: 200m
    limits:
      memory: 1Gi
  
  storage:
    size: 25Gi
    storageClass: nfs-subdir

  # Ref: https://cloudnative-pg.io/documentation/current/wal_archiving/#plugin-based-architecture
  plugins:
    - name: barman-cloud.cloudnative-pg.io
      enabled: true
      isWALArchiver: false
      parameters:
        serverName: cnpg-default
        barmanObjectName: cnpg-default-barman

  # Ref: https://cloudnative-pg.io/documentation/current/instance_manager/
  startDelay: 120
  stopDelay: 30
  smartShutdownTimeout: 15
  probes:
    readiness:
      initialDelaySeconds: 15
      timeoutSeconds: 5
      periodSeconds: 30
    liveness:
      initialDelaySeconds: 15
      timeoutSeconds: 5
      periodSeconds: 30

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/local-storage
              operator: Exists

  # Ref: https://cloudnative-pg.io/plugin-barman-cloud/docs/concepts/#recovery-of-a-postgres-cluster
  bootstrap:
    recovery:
      source: cnpg-default-backup
  externalClusters:
    - name: cnpg-default-backup
      plugin:
        name: barman-cloud.cloudnative-pg.io
        parameters:
          barmanObjectName: cnpg-default-barman
          serverName: cnpg-default

  # NOTE: keeping `bootstrap` section here for reference, refer to
  # CloudNativePG documentation for more details.
  # Ref: https://cloudnative-pg.io/documentation/current/bootstrap/
  # Ref: https://cloudnative-pg.io/documentation/current/database_import/     
  # bootstrap:
  #   initdb:
  #     import:
  #       type: monolith
  #       databases:
  #         - db_1
  #         - db_2
  #       roles:
  #         - role_1
  #         - role_2
  #       source:
  #         externalCluster: postgres-default-cluster
  # externalClusters:
  #   - name: postgres-default-cluster
  #     connectionParameters: 
  #       host: postgres.default.svc
  #       dbname: postgres
  #       user: postgres
  #     password:
  #       name: cnpg-default-secret
  #       key: password
