apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
helmCharts:
  - name: core-dns
    namespace: kube-system
    releaseName: coredns
    version: 1.42.0
    repo: oci://ghcr.io/coredns/charts/coredns
    valuesInline:
      limits:
        memory: 170Mi
      requests:
        cpu: 100m
        memory: 70Mi
      
      rollingUpdate:
        maxUnavailable: 0

      prometheus:
        service:
          enabled: false
        monitor:
          enabled: false

      serviceAccount:
        create: true

      rbac:
        create: true

      isClusterService: true

      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - NET_BIND_SERVICE
          drop:
            - ALL
        readOnlyRootFilesystem: true

      # Default zone is what Kubernetes recommends:
      # https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#coredns-configmap-options
      servers:
      - zones:
        - zone: .
        port: 53
        plugins:
        - name: errors
        - name: health
          configBlock: |-
            lameduck 10s
        - name: ready
        - name: kubernetes
          parameters: cluster.local in-addr.arpa ip6.arpa
          configBlock: |-
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        # - name: prometheus
        #   parameters: 0.0.0.0:9153
        - name: forward
          parameters: . /etc/resolv.conf
        - name: cache
          parameters: 30
        - name: loop
        - name: reload
        - name: loadbalance
        - name: log
          parameters: .
          configBlock: |-
            class error

      # To use the livenessProbe, the health plugin needs to be enabled in CoreDNS' server config
      livenessProbe:
        enabled: true

      # To use the readinessProbe, the ready plugin needs to be enabled in CoreDNS' server config
      readinessProbe:
        enabled: true

      hpa:
        enabled: false
      autoscaler:
        enabled: false

      deployment:
        skipConfig: false
        enabled: true
