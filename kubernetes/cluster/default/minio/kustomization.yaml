---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - dns-endpoint.yaml
  - secret.yaml
helmCharts:
  # Ref: https://github.com/minio/operator/tree/master/helm/operator
  - name: operator
    namespace: minio
    releaseName: operator
    version: 7.0.1
    repo: https://operator.min.io
    valuesInline:
      operator:
        # Ref: https://github.com/minio/operator/blob/master/docs/env-variables.md
        env:
          - name: OPERATOR_STS_ENABLED
            value: "on"
        replicaCount: 2  
        nodeSelector:
          node.kubernetes.io/microk8s-controlplane: microk8s-controlplane
        tolerations:
          - key: "node.kubernetes.io/unschedulable"
            operator: Exists
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
  # Ref: https://github.com/minio/operator/tree/master/helm/tenant
  - name: tenant
    namespace: minio
    releaseName: tenant
    version: 7.0.1
    repo: https://operator.min.io
    valuesInline:
      tenant:
        name: minio
        # Ref: https://github.com/minio/minio/tree/master/docs/config
        configuration:
          name: minio-secret-config
        pools:
          - servers: 1
            name: default
            volumesPerServer: 1
            storageClassName: nfs-subdir
            size: 20G
            resources: {}
        metrics:
          enabled: false
        certificate:
          requestAutoCert: true
        # Ref: https://min.io/docs/minio/kubernetes/upstream/reference/operator-crd.html#features
        features:
          bucketDNS: false
          domains: {}
          enableSFTP: false
        buckets:
          - name: cnpg-backup
          - name: obsidian-sync
          - name: sandbox
        # Array of Kubernetes secrets from which the Operator generates MinIO users during tenant provisioning.
        # Each secret should specify the ``CONSOLE_ACCESS_KEY`` and ``CONSOLE_SECRET_KEY`` as the access key and secret key for that user
        users:
          - minio-cnpg-user
        # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes
        liveness: {}
        readiness: {}
        startup: {}
        env: []
      ingress:
        api:
          enabled: false
        console:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: public
            cert-manager.io/cluster-issuer: lets-encrypt
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          host: minio.brhd.io