# TODO: Homer update
# TODO: custom configuration and OAuth
# TODO: finally deploy own REDIS instance and transition all services
# TODO: move Nextcloud / Google apps alternatives into separate namespace
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: extras
resources:
  - secret.yaml
  - pv-pvc-data.yaml
  - dns-endpoint.yaml
helmCharts:
  - name: immich
    namespace: extras
    releaseName: immich
    version: 0.7.0
    repo: https://immich-app.github.io/immich-charts
    valuesInline:
      # Ref: https://github.com/immich-app/immich-charts/blob/main/charts/immich/values.yaml
      env:
        # REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
        DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
        DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
        DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
        # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
        DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
        IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
      immich:
        metrics:
          enabled: false
        persistence:
          library:
            existingClaim: immich-data
        # Ref: https://immich.app/docs/install/config-file/
        configuration:
          trash:
            enabled: true
            days: 30
          storageTemplate:
            enabled: true
            template: "{{y}}/{{MM}}/{{filename}}"
      
      # Dependencies
      postgresql:
        enabled: false
        global:
          postgresql:
            auth:
              existingSecret: # TODO
      redis:
        enabled: true
        architecture: standalone
        auth:
          enabled: false

      # Immich Components
      server:
        enabled: true
        ingress:
          main:
            enabled: false
            annotations:
              kubernetes.io/ingress.class: public
              cert-manager.io/cluster-issuer: lets-encrypt
              nginx.ingress.kubernetes.io/proxy-body-size: "0"
            hosts:
              - host: photos.brhd.io
                paths:
                  - path: "/"
      machine-learning:
        enabled: false
        env:
          TRANSFORMERS_CACHE: /cache
        persistence:
          cache:
            enabled: true
            size: 10Gi
            # Optional: Set this to pvc to avoid downloading the ML models every start.
            # type: emptyDir
            accessMode: ReadWriteMany
            storageClass: nfs-subdir
