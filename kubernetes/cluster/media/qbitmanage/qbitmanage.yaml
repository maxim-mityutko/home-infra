# Service: Qbitmanage
# Label: app.kubernetes.io/name: qbitmanage
---
apiVersion: v1
kind: Service
metadata:
  name: qbitmanage
  namespace: media
  labels:
    app.kubernetes.io/name: qbitmanage
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: qbitmanage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbitmanage
  namespace: media
  labels:
    app.kubernetes.io/name: qbitmanage
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qbitmanage
  strategy:
    type: Recreate
  revisionHistoryLimit: 1
  template:
    metadata:
      namespace: media
      labels:
        app.kubernetes.io/name: qbitmanage
    spec:
      restartPolicy: Always
      containers:
        - name: qbitmanage
          image: ghcr.io/hotio/qbitmanage:release-4.5.4
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 1000Mi
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: qbitmanage
          volumeMounts:
            - name: downloads
              mountPath: /downloads
            - name: qbitmanage-config
              mountPath: /config
      initContainers:
        - args:
            - '-v'
            - /config.yml
            - /config/config.yml
          command:
            - cp
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: qbitmanage-init
          resources: {}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: qbitmanage-config
              mountPath: /config 
            - name: qbitmanage-config-yml
              mountPath: /config.yml
              subPath: config.yml
      volumes:
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads
        - name: qbitmanage-config
          emptyDir: {}
        - name: qbitmanage-config-yml
          configMap:
            name: qbitmanage-config-yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qbitmanage
  namespace: media
  labels:
    app.kubernetes.io/name: qbitmanage
data:
  TZ: Europe/Amsterdam
  QBT_WEB_SERVER: "true"
  QBT_PORT: "8080"
