# IMPORTANT
# Immich requires 'pgvecto-rs' extension for PostgreSQL, which might require
# some level of maintenance, check: https://immich.app/docs/administration/postgres-standalone/
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: privacy
resources:
  - secret.yaml
  - config.yaml
  - pv-pvc-data.yaml
  - dns-endpoint.yaml
helmCharts:
  - name: immich
    namespace: privacy
    releaseName: immich
    version: 0.7.2
    repo: https://immich-app.github.io/immich-charts
    valuesInline:
      # Ref: https://github.com/immich-app/immich-charts/blob/main/charts/immich/values.yaml
      # Ref: https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
      env: {}
      envFrom:
        - configMapRef:
            name: immich
        - secretRef: 
            name: immich
      
      immich:
        metrics:
          enabled: false
        persistence:
          library:
            existingClaim: immich-data
      
      # Dependencies
      postgresql:
        enabled: false
      redis:
        enabled: false

      # Immich Components
      # TODO: possibility to separate API and WORKERS: https://immich.app/docs/administration/jobs-workers/
      server:
        enabled: true
        image:
          tag: v1.116.2
        resources:
          requests:
            cpu: 200m
            memory: 250Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        persistence:
          # External Library
          external:
            enabled: true
            existingClaim: immich-external
            mountPath: /media/external
            readOnly: true
        probes:
          liveness:
            spec:
              initialDelaySeconds: 90
              periodSeconds: 30
          readiness:
            spec:
              initialDelaySeconds: 30
              periodSeconds: 30
              failureThreshold: 5
        ingress:
          main:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: public
              cert-manager.io/cluster-issuer: lets-encrypt
              nginx.ingress.kubernetes.io/proxy-body-size: "0"
            hosts:
              - host: photos.brhd.io
                paths:
                  - path: "/"

      machine-learning:
        enabled: true
        env:
          TRANSFORMERS_CACHE: /cache
        image:
          tag: v1.116.2-cuda
        resources:
          requests:
            cpu: 100m
            memory: 150Mi
          limits:
            cpu: 500m
            memory: 2Gi
        probes:
          liveness:
            spec:
              initialDelaySeconds: 90
              periodSeconds: 30
          readiness:
            spec:
              initialDelaySeconds: 30
              periodSeconds: 30
              failureThreshold: 5
        persistence:
          cache:
            enabled: true
            size: 10Gi
            type: pvc
            accessMode: ReadWriteMany
            storageClass: nfs-subdir
        nodeSelector:
          nvidia.com/gpu.present: "true"
