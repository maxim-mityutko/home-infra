# Ref: https://github.com/immich-app/immich-charts/blob/main/charts/immich/values.yaml
# Ref: https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
# env: {}
# envFrom:
#   - configMapRef:
#       name: immich
#   - secretRef: 
#       name: immich

controllers:
  main:
    revisionHistoryLimit: 2
    containers:
      main:
        image:
          repository: ghcr.io/immich-app/immich-server
          tag: v2.1.0 # Use <tag>-cuda for NVidia GPUs
        env:
          DB_HOSTNAME:
            valueFrom:
              configMapKeyRef:
                name: immich
                key: DB_HOSTNAME
          DB_DATABASE_NAME:
            valueFrom:
              secretKeyRef:
                name: immich
                key: DB_DATABASE_NAME
          DB_USERNAME:
            valueFrom:
              secretKeyRef:
                name: immich
                key: DB_USERNAME
          DB_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: immich
                key: DB_PASSWORD
          REDIS_HOSTNAME:
            valueFrom:
              configMapKeyRef:
                name: immich
                key: REDIS_HOSTNAME
        # envFrom:
        #   - configMapRef:
        #       name: immich
        #   - secretRef: 
        #       name: immich

immich:
  metrics:
    enabled: false
  persistence:
    library:
      existingClaim: immich-data

# Dependencies
valkey:
  enabled: false

# Immich Components
# TODO: possibility to separate API and WORKERS: https://immich.app/docs/administration/jobs-workers/
# Ref: https://github.com/immich-app/immich-charts/pull/137
server:
  enabled: true
  controllers:
    main:
      containers:
        main:
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 200m
              memory: 250Mi
            limits:
              cpu: 2000m
              memory: 2Gi
          probes:
            liveness:
              enabled: true
              spec:
                initialDelaySeconds: 90
                periodSeconds: 30
            readiness:
              enabled: true
              spec:
                initialDelaySeconds: 30
                periodSeconds: 30
                failureThreshold: 5
      pod:
        securityContext:
          supplementalGroups: 
            - 993 # Required for iGPU access
        nodeSelector:
          kubernetes.io/gpu: intel
  persistence:
    # External Library
    external:
      enabled: true
      existingClaim: immich-external
      mountPath: /media/external
      readOnly: true
    render-device:
      enabled: true
      type: hostPath
      hostPath: /dev/dri/renderD128
      mountPath: /dev/dri/renderD128
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: public
        cert-manager.io/cluster-issuer: lets-encrypt
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
        - host: photos.brhd.io
          paths:
            - path: "/"
  nodeSelector:
    kubernetes.io/gpu: intel

machine-learning:
  enabled: true
  controllers:
    main:
      containers:
        main:
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
            limits:
              cpu: 2000m
              memory: 4Gi
          probes:
            liveness:
              spec:
                initialDelaySeconds: 90
                periodSeconds: 30
            readiness:
              spec:
                initialDelaySeconds: 30
                periodSeconds: 30
                failureThreshold: 5
      pod:
        nodeSelector:
          kubernetes.io/node-size: large
  persistence:
    cache:
      enabled: true
      size: 10Gi
      type: persistentVolumeClaim
      accessMode: ReadWriteMany
      storageClass: nfs-subdir
